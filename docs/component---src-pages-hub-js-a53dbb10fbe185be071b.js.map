{"version":3,"file":"component---src-pages-hub-js-a53dbb10fbe185be071b.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js","webpack://gatsby-starter-default/./src/pagesComponents/hub/hub.js","webpack://gatsby-starter-default/./src/pages/hub.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache'; // prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar cache = createCache({\n  key: 'css',\n  prepend: true\n});\nexport default function StyledEngineProvider(props) {\n  var injectFirst = props.injectFirst,\n      children = props.children;\n  return injectFirst ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;","import React, { useEffect, useState } from 'react'\nimport \"../../style/css/style.min.css\"\nimport \"aos/dist/aos.css\"\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\nimport Layout from \"../../components/layout\"\nimport '../../utils/font-awesome'\nimport FrontOfficeTheme from '../../style/globalTheme'\nimport { css } from \"@emotion/react\"\nimport ClipLoader from \"react-spinners/SquareLoader\"\nimport Box from '@mui/material/Box'\nimport { navigate } from 'gatsby-link';\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\n\n\nconst Hub = ({ imageUrl, eventData, isSubscribed }) => {\n\n\n    let [loading, setLoading] = useState(true);\n    let [color, setColor] = useState(\"#000000\")\n\n    const [count, setCount] = useState(0)\n    const [seconds, setSeconds] = useState(null)\n    const [minutes, setMinutes] = useState(null)\n    const [hours, setHours] = useState(null)\n    const [days, setDays] = useState(null)\n    const [showDate, setShowDate] = useState(false)\n    const [states, setStates] = useState([])\n    const [message, setMessage] = useState('')\n    const [eventEnded, setEventEnded] = useState(false)\n    const [isMounted, setIsMounted] = useState(false)\n\n    useEffect(() => {\n\n        const newStates = states.concat(isSubscribed)\n        setStates(newStates)\n\n        if (newStates.includes('CYCLE-NOTFOUND') && newStates.includes('EVENT-NOTFOUND'))\n            setMessage(\"Vous n'êtes pas inscrit à cet événement avec ce compte. Veillez vous connecter avec le bon compte ou acheter cet événement avec ce compte.\")\n\n        if (newStates.includes('CYCLE-FOUND') || newStates.includes('EVENT-FOUND'))\n            setMessage(\"\")\n\n    }, [isSubscribed])\n\n\n    let AOS;\n    useEffect(() => {\n\n        setIsMounted(true)\n\n        const AOS = require(\"aos\");\n        AOS.init({\n            once: true,\n        });\n    }, []);\n\n    useEffect(() => {\n        if (AOS) {\n            AOS.refresh();\n        }\n    })\n\n    useEffect(() => {\n\n        if (eventData) {\n\n            const now = new Date()\n            const time = parseInt(now.getTime() / 1000)\n            const remainingSeconds = eventData.date - time\n\n            if (remainingSeconds < - 60 * eventData.duree)\n                setEventEnded(true)\n\n        }\n\n\n\n    }, [count, eventData])\n\n    useEffect(() => {\n        if (!eventData)\n            setShowDate(false)\n        if (eventData) {\n\n            const now = new Date()\n            const time = parseInt(now.getTime() / 1000)\n            const timer = setTimeout(() => {\n                const remainingSeconds = eventData.date - time\n\n                setShowDate(true)\n\n\n\n\n                if (remainingSeconds < - 60 * eventData.duree)\n                    setShowDate(false)\n                else {\n                    const nbDays = parseInt(remainingSeconds / 3600 / 24)\n                    const nbHours = parseInt((remainingSeconds - nbDays * 3600 * 24) / 3600)\n                    const nbMinutes = parseInt((remainingSeconds - nbDays * 3600 * 24 - nbHours * 3600) / 60)\n                    const nbSeconds = remainingSeconds - nbDays * 3600 * 24 - nbHours * 3600 - nbMinutes * 60\n                    setDays(nbDays)\n                    setHours(nbHours)\n                    setMinutes(nbMinutes)\n                    setSeconds(nbSeconds)\n                    setCount((count + 1) % 10)\n\n\n                    // http://locahosst:8000/hub/?inscription=e8a97471-8d8b-4d49-8daa-090106232a8d\n\n                    if (remainingSeconds < 15 * 60 && eventData.outilUrl && remainingSeconds > - 60 * eventData.duree) {\n                        const eventUrl = eventData?.outilUrl\n\n                        if (eventUrl) {\n                            const regex = /(https:\\/\\/)\\S+/\n                            let finalUrl = 'https://www.pekoia.com'\n                            if (eventUrl.match(regex))\n                                finalUrl = eventUrl\n                            else\n                                finalUrl = 'https://' + eventUrl\n\n\n                            console.log('-- DEBUG --')\n                            console.log(finalUrl)\n\n\n                            window.location.href = finalUrl\n                        }\n\n                    }\n\n\n                }\n            }, 1000);\n            return () => clearTimeout(timer)\n        }\n\n\n    }, [count, eventData])\n\n\n\n\n    // srcset=\"i/content_26_video_poster@2x.jpg 2x\" \n\n    return (\n        <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={FrontOfficeTheme}>\n                <Layout >\n\n\n                    {/* <!-- Content 26 --> */}\n                    <section className=\"pt-100 pb-100 bg-light content_26\">\n                        <div className=\"container px-xl-0\">\n                            <div className=\"row justify-content-center\">\n                                <div className=\"col-xl-10 col-lg-11\">\n\n                                    <div className=\"row flex-row-reverse justify-content-between\">\n\n                                        <div className=\"col-md-7 mb-3 mb-md-0\">\n                                            <div className=\"relative poster\" data-aos=\"fade-down\" data-aos-delay=\"250\">\n\n                                                <img src={imageUrl} alt=\"\" className=\"img-fluid radius10\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-4 h-800\">\n                                            <div className=\"mb-20\"> {message}</div>\n                                            <div className=\"mt-15 inner h-80\">\n\n\n                                                {!showDate && <Box textAlign=\"center\"><ClipLoader color={color} loading={loading} css={override} size={80} /></Box>}\n                                                {showDate && <h2 className=\"f-20 color-heading\">\n                                                    {eventData?.title1}{eventData?.title2 ? \"-\" : \"\"} {eventData?.title2}\n                                                </h2>}\n                                                {showDate && <h2 className=\"f-20 color-heading mt-20\">\n                                                    {\"dans \"}\n                                                    {days > 1 ? days + ' jours ' : ''}\n                                                    {[0, 1].includes(days) ? days + ' jour ' : ''}\n                                                    {hours > 1 ? hours + 'h ' : ''}\n                                                    {[0, 1].includes(hours) ? hours + 'h ' : ''}\n                                                    {minutes > 1 ? minutes + 'mn ' : ''}\n                                                    {[0, 1].includes(minutes) ? minutes + 'mn ' : ''}\n                                                    {seconds > 1 ? seconds + 's' : ''}\n                                                    {[0, 1].includes(seconds) ? seconds + 's' : ''}\n                                                </h2>}\n\n\n                                                <h2 className=\"f-22 mt-40\">\n                                                    {showDate && !eventEnded && \"L'événement n'est pas encore ouvert\"}\n                                                    { eventEnded && \"Evénement terminé.\"}\n                                                   \n                                                </h2>\n                                                <div className=\"mt-15 color-heading text-adaptive\">\n                                                    {!eventEnded && isMounted &&  eventData && \"Le lien vers l'événement en ligne sera accessible au plus tôt une heure avant l'événement. Nous vous remercions donc de vous reconnecter  via ce même lien quelques minutes avant le début de l'événement.\"}\n                                                </div>\n                                                <button onClick={() => navigate('/')} className=\"btn mt-60 sm border-gray color-main f-16\">\n                                                    Retour à Pekoia\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n\n                </Layout>\n            </ThemeProvider>\n        </StyledEngineProvider>\n    );\n}\nexport default Hub\n","import React, { useEffect, useContext, useState } from \"react\"\nimport { API, graphqlOperation } from \"aws-amplify\"\nimport { AuthContext } from \"../context/general\"\nimport  { Auth ,Amplify} from 'aws-amplify';\nimport { transactionsByClientId, eventsbyCycle, clientByCognitoId, getEvent } from '../graphql/queries'\nimport Hub from '../pagesComponents/hub/hub'\nimport { useQueryParam, StringParam } from \"use-query-params\"\n\nimport { Location } from '@reach/router'\nimport queryString from 'query-string'\nimport PropTypes from \"prop-types\"\nimport { Analytics } from 'aws-amplify'\n\nimport awsConfig from '../aws-exports'\nimport { InvertColorsSharp } from \"@mui/icons-material\";\n\nAmplify.configure(awsConfig)\n\nconst handleFound = (eventId, setImageUrl, setEventData, setIsSubscribed) => {\n   \n    setIsSubscribed(1)\n    API.graphql(graphqlOperation(getEvent, { id: eventId }))\n        .then(({ data }) => {\n\n           \n            const url = 'https://www.pekoia.com/static/L' + data.getEvent?.imageKey + '-500-' + data.getEvent?.imageETag500 + '.jpg'\n            setImageUrl(url)\n            setEventData(data.getEvent)\n           \n                    \n\n            \n\n\n\n        })\n\n}\n\n\n\n\n\n\nconst Ics = () => {\n\n    const [imageUrl, setImageUrl] = useState(null)\n    const [eventData, setEventData] = useState(null)\n    const [foo, setFoo] = useQueryParam(\"inscription\", StringParam)\n        \n\n    const { authState, authActions } = useContext(AuthContext)\n   \n    const [isAuthenticating, setIsAuthenticating] = useState(true)\n    const [isAuthenticated, userHasAuthenticated] = useState(false)\n    const [isSubscribed, setIsSubscribed] = useState(0)\n    const [message, setMessage] = useState('')\n    const [gotConnection, setGotConnection] = useState(false)\n   \n    const onLoad = async () => {\n        try {\n            await Auth.currentSession();\n            userHasAuthenticated(true);\n        }\n        catch (e) {\n            if (e !== 'No current user') {\n                console.log('GROSS MOSTAKE')\n            }\n        }\n\n        setIsAuthenticating(false);\n    }\n\n    useEffect(() => {\n        onLoad()\n\n\n    }, [])\n\n    useEffect(()=>{\n\n        if (process.env.NODE_ENV === \"production\"){\n    \n          Analytics.record({ name: 'hubPageVisit' })\n    \n        }\n    \n       \n    \n      },[])\n    \n\n\n    const getConnection = (eventId) => {\n\n        if ( !gotConnection){\n\n       \n\n\n        Auth.user && Auth.currentAuthenticatedUser()\n            .then(data => {\n\n\n                const cognitoId = data?.attributes?.sub\n\n                if (cognitoId) {\n\n                    API.graphql(graphqlOperation(clientByCognitoId, { cognitoId: cognitoId }))\n                        .then(({ data }) => {\n                          \n                            const result = data?.clientByCognitoId?.items\n                          \n                            if (result?.length) {\n                                const clientId = result[0].id\n\n\n                                // avoid double calls\n                                setGotConnection(true)\n\n                                API.graphql(graphqlOperation(transactionsByClientId, { clientId: clientId, limit: 100000000 }))\n                                    .then(({ data }) => {\n                                       \n                                        const cyclesTX = data?.transactionsByClientId?.items\n                                            .filter(elem => elem.cycleId && elem.cycleId != \"undetermined\" && ['INITIATING', 'PROCESSING', 'SETTLED'].includes(elem.status))\n                                            .filter(elem => elem.lemonwayId)\n\n                                        //API.graphql(graphqlOperation(eventsbyCycle, { cycleId: cycleId }))\n                                        cyclesTX.forEach(tx => {\n                                            const cycleId = tx.cycleId\n                                            API.graphql(graphqlOperation(eventsbyCycle, { cycleId: cycleId }))\n                                                .then(({ data }) => {\n                                                    const eventsIds = data.eventsbyCycle.items\n                                                        .map(event => event.id)\n\n                                                    const found = eventsIds.find(event => event === eventId)\n                                                    if (found){\n                                                        handleFound(eventId, setImageUrl, setEventData, setIsSubscribed)\n                                                        setIsSubscribed('CYCLE-FOUND') \n                                                    }\n                                                    else {\n                                                        setIsSubscribed('CYCLE-NOTFOUND') \n                                                    }\n                                                })\n\n                                        })\n\n                                    })\n                                    .catch(err => console.log(err))\n\n                                API.graphql(graphqlOperation(transactionsByClientId, { clientId: clientId, limit: 100000000 }))\n                                    .then(({ data }) => {\n\n                                        const transactions = data?.transactionsByClientId?.items\n\n                                        const found = transactions.find(transaction => transaction.eventId === eventId)\n\n                                        if (!found) {\n                                            setIsSubscribed('EVENT-NOTFOUND') // not subscribed\n\n                                        }\n                                        if (found) {\n                                            setIsSubscribed('EVENT-FOUND')\n                                            handleFound(eventId, setImageUrl, setEventData, setIsSubscribed)\n\n                                        }\n\n                                    })\n\n                            }\n\n\n                        })\n                        .catch(err => console.log(err))\n\n\n                }\n\n\n\n            })\n\n        }\n    }\n\n\n    useEffect(() => {\n\n\n        \n        console.log('@SEARCH')\n        console.log(foo)\n\n\n\n        const eventId = foo\n\n\n\n\n        if (!isAuthenticating && !isAuthenticated) {\n            authActions.toggleLoginModal(3)\n        }\n\n        if (!isAuthenticating && isAuthenticated) {\n\n            getConnection(eventId)\n        }\n\n\n\n    }, [isAuthenticating, isAuthenticated])\n\n\n    useEffect(() => {\n        if (isSubscribed === 2) {\n            setMessage(\"Vous n'êtes pas inscrit à l'événement avec cet identifiant. Veuillez changer de compte ou vous inscrire sur celui-ci.\")\n        }\n    }, [isSubscribed])\n\n\n    useEffect(() => {\n        const eventId = foo\n\n\n\n\n\n        if (!isAuthenticating && authState.user?.id)\n            getConnection(eventId)\n\n\n\n    }, [authState])\n\n\n\n\n    return (\n\n        <Hub imageUrl={imageUrl} message={message} eventData={eventData} isSubscribed={isSubscribed} />\n\n    )\n}\n\n\n\n\n\nexport default Ics"],"names":["cache","key","prepend","StyledEngineProvider","props","injectFirst","children","C","value","override","AOS","imageUrl","eventData","isSubscribed","useState","loading","color","count","setCount","seconds","setSeconds","minutes","setMinutes","hours","setHours","days","setDays","showDate","setShowDate","states","setStates","message","setMessage","eventEnded","setEventEnded","isMounted","setIsMounted","useEffect","newStates","concat","includes","require","init","once","now","Date","time","parseInt","getTime","date","duree","timer","setTimeout","remainingSeconds","nbDays","nbHours","nbMinutes","nbSeconds","outilUrl","eventUrl","finalUrl","match","console","log","window","location","href","clearTimeout","___EmotionJSX","ThemeProvider","theme","FrontOfficeTheme","Layout","className","src","alt","Box","textAlign","ClipLoader","css","size","title1","title2","onClick","navigate","Amplify","awsConfig","handleFound","eventId","setImageUrl","setEventData","setIsSubscribed","API","graphqlOperation","getEvent","id","then","data","url","_data$getEvent","imageKey","_data$getEvent2","imageETag500","useQueryParam","StringParam","foo","useContext","AuthContext","authState","authActions","isAuthenticating","setIsAuthenticating","isAuthenticated","userHasAuthenticated","gotConnection","setGotConnection","onLoad","Auth","_context","Analytics","name","getConnection","cognitoId","attributes","_data$attributes","sub","clientByCognitoId","result","_data$clientByCognito","items","length","clientId","transactionsByClientId","limit","_data$transactionsByC","filter","elem","cycleId","status","lemonwayId","forEach","tx","eventsbyCycle","map","event","find","catch","err","found","_data$transactionsByC2","transaction","toggleLoginModal","user","_authState$user","Hub"],"sourceRoot":""}