{"version":3,"file":"component---src-pages-cgu-js-11e6605da2a23d642afb.js","mappings":"oMAOIA,GAAQ,aAAY,CACtBC,IAAK,MACLC,SAAS,IAEI,SAASC,EAAqBC,GAC3C,IAAIC,EAAcD,EAAMC,YACpBC,EAAWF,EAAME,SACrB,OAAOD,GAA2B,SAAK,EAAAE,EAAe,CACpDC,MAAOR,EACPM,SAAUA,IACPA,I,qECgDP,IApDA,YAA0E,IAAD,MAoBnEG,EApBSC,EAA0D,EAA1DA,YAAyBC,GAAiC,EAA7CC,KAA6C,EAAvCC,KAAuC,EAAjCF,OAAOG,EAA0B,EAA1BA,MAAYC,GAAc,EAAnBC,IAAmB,EAAdD,MAAME,EAAQ,EAARA,KACvDC,GAASC,EAAAA,EAAAA,gBAAe,aAAxBD,KAiBJE,EAAU,KAIdX,GAHAW,GAAUL,MAAAA,OAAAA,EAAAA,EAAMM,aAAaN,MAAAA,OAAnB,EAAmBA,EAAMM,UAAUC,eAAeC,EAAAA,EAAAA,GAAQR,MAAAA,OAAD,EAACA,EAAMM,UAAUZ,QAGlE,KAAOW,EAAQI,UAAUC,MAAM,KAAKC,MAAM,EAAG,GAAGC,KAAK,KAAO,IAAMP,EAAQQ,UAAY,qBAExG,IAAMC,EAAkBnB,GAAeQ,EAAKY,aAAapB,aAAe,GAGlEqB,GAFY,UAAGb,EAAKY,oBAAR,OAAGE,EAAmBrB,MAExBM,EAAI,cAAMC,EAAKY,oBAAX,aAAMG,EAAmBjB,KAAMC,EAAS,MAQ5D,OACEiB,EAAAA,EAAAA,KAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,KAAAA,QAAAA,KAAQvB,IACRuB,EAAAA,EAAAA,KAAAA,OAAAA,CAAMC,SAAS,SAASC,QAASL,KACjCG,EAAAA,EAAAA,KAAAA,OAAAA,CAAMC,SAAS,WAAWC,QAAS3B,EAAOA,EAAOE,EAAQA,KACzDuB,EAAAA,EAAAA,KAAAA,OAAAA,CAAMC,SAAS,WAAWC,QAAO,cAAKlB,EAAKY,oBAAV,aAAKO,EAAmBrB,KAAMF,KAC/DoB,EAAAA,EAAAA,KAAAA,OAAAA,CAAMC,SAAS,iBAAiBC,QAASP,KAEzCK,EAAAA,EAAAA,KAAAA,OAAAA,CAAMC,SAAS,UAAUC,QAAS,aAClCF,EAAAA,EAAAA,KAAAA,OAAAA,CAAMC,SAAS,UAAUC,QAAQ,gB,yJChD1BE,EAAO,SAAC,GAAD,EAAGC,SAAH,EAAaC,OAAb,EAAqBzB,KAArB,EAA2B0B,YAA3B,OAChBP,EAAAA,EAAAA,KAACQ,EAAAA,EAAD,CAAK/B,MAAM,SAiCf,UA5BgB,SAAC,GAAc,IAAZI,EAAW,EAAXA,KAIX4B,EAAO5B,EAAK6B,KAAKC,MAAMC,MAAK,kBAAyC,QAAzC,EAAGC,KAAgBC,YAAYrC,SAAiBoC,KAAKE,KAMvF,OACEf,EAAAA,EAAAA,KAAC/B,EAAAA,EAAD,CAAsBE,aAAW,IAC/B6B,EAAAA,EAAAA,KAACgB,EAAAA,EAAD,CAAeC,MAAOC,EAAAA,KAEpBlB,EAAAA,EAAAA,KAACmB,EAAAA,EAAD,CAAQtC,KAAMA,IAEZmB,EAAAA,EAAAA,KAACoB,EAAAA,EAAD,CAAKC,OAAO,QACVrB,EAAAA,EAAAA,KAAAA,MAAAA,CAAKsB,wBAAyB,CAAEC,OAAQd","sources":["webpack://gatsby-starter-default/./node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/cgu.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache'; // prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar cache = createCache({\n  key: 'css',\n  prepend: true\n});\nexport default function StyledEngineProvider(props) {\n  var injectFirst = props.injectFirst,\n      children = props.children;\n  return injectFirst ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\n\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport getDate from '../helpers/dates'\n\n\nfunction Seo({ description, lang, meta, title, image, url, data, slug }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            image\n            url \n          }\n        }\n      }\n    `\n  )\n\n\n  let rawDate = null\n  rawDate = data?.pageEvent && data?.pageEvent.attendingNb && getDate(data?.pageEvent.date)\n  let date = null\n\n  date = rawDate && 'ðŸ”´' + rawDate.ParisDate.split(' ').slice(0, 2).join(' ') + ' ' + rawDate.ParisTime + ' (heure de Paris) '\n\n  const metaDescription = description || site.siteMetadata.description || ''\n  const defaultTitle = site.siteMetadata?.title\n\n  const pageUrl = slug ? `${site.siteMetadata?.url}${slug}` : null\n\n\n\n\n\n\n\n  return (\n    <>\n      <title>{title}</title>\n      <meta property='og:url' content={pageUrl} />\n      <meta property='og:title' content={date ? date + title : title} />\n      <meta property='og:image' content={`${site.siteMetadata?.url}${image}`} />\n      <meta property='og:description' content={metaDescription} />\n      \n      <meta property='og:type' content={'website'} />\n      <meta property='og:myId' content='1234-567' />\n    </>\n  )\n}\n\n\n\n\nexport default Seo\n","import React from \"react\"\nimport { graphql } from 'gatsby'\nimport Box from '@mui/material/Box'\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\nimport '../components/layout'\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport FrontOfficeTheme from '../style/globalTheme'\n\nexport const Head = ({ location, params, data, pageContext }) => (\n    <Seo title=\"CGU\" />\n    )\n    \n   \n\nconst CguPage = ({ data }) => {\n\n\n\n  const Html = data.docs.edges.find(({ node }) => node.frontmatter.title === 'cgu').node.html\n\n\n\n\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={FrontOfficeTheme}>\n\n        <Layout data={data}>\n\n          <Box margin=\"15%\">\n            <div dangerouslySetInnerHTML={{ __html: Html }} />\n          </Box>\n\n\n\n        </Layout>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n\nexport default CguPage\n\nexport const query = graphql`\n query {\n  docs: allMarkdownRemark(filter: {frontmatter: {type: {eq: \"legal\"}}}) {\n    edges {\n      node {\n        html\n        frontmatter {\n          type\n          title\n        }\n      }\n    }\n  }\n }\n`\n"],"names":["cache","key","prepend","StyledEngineProvider","props","injectFirst","children","C","value","date","description","title","lang","meta","image","data","url","slug","site","useStaticQuery","rawDate","pageEvent","attendingNb","getDate","ParisDate","split","slice","join","ParisTime","metaDescription","siteMetadata","pageUrl","_site$siteMetadata","_site$siteMetadata2","___EmotionJSX","property","content","_site$siteMetadata3","Head","location","params","pageContext","Seo","Html","docs","edges","find","node","frontmatter","html","ThemeProvider","theme","FrontOfficeTheme","Layout","Box","margin","dangerouslySetInnerHTML","__html"],"sourceRoot":""}