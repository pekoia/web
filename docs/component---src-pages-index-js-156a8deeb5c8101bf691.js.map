{"version":3,"file":"component---src-pages-index-js-156a8deeb5c8101bf691.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["\nimport React, { useEffect, useContext, useState, useRef, lazy, Suspense } from \"react\"\nimport { graphql } from 'gatsby'\nimport Box from '@mui/material/Box'\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\nimport '../components/layout'\nimport { AuthContext } from \"../context/general\"\nimport Layout from \"../components/layout\"\nimport { fetchTransactions, fetchNotifications, fetchCredits, greet, fetchPromoCodes} from '../helpers/fetchers'\nimport Seo from \"../components/seo\"\nimport MainImage from '../pagesComponents/homepage/mainImage'\nimport MainFilter from '../pagesComponents/homepage/mainFilter'\nimport ConferencesSection from '../pagesComponents/homepage/conferencesSection'\nimport ReplaySection from '../pagesComponents/homepage/replaySection'\nimport CyclesSection from '../pagesComponents/homepage/cyclesSection'\nimport SecondPhoto from '../pagesComponents/homepage/secondPhoto'\nimport { Location } from '@reach/router'\nimport queryString from 'query-string'\nimport PropTypes from \"prop-types\"\n// import scrollTo from 'gatsby-plugin-smoothscroll'\n// import publicIp from 'public-ip'\nimport {DEBUG} from '../buildSpecs'\n\n\n\nimport FrontOfficeTheme, { sxStyle } from '../style/globalTheme'\n\n// import Calendar from './components/homepage/calendar'\n\n const Calendar = lazy(() => import('../pagesComponents/homepage/calendar'))\n\n\nconst title = 'Pekoia | conférences, webinars, cours en ligne pour tous'\nconst description = `Savourez des conférences culturelles diffusées depuis la France, le catalogue ne cesse de grandir, tant en direct qu'en replay !\nArt contemporain, impressionnistes, cubistes, art gothique, âge d'or de la peinture néerlandaise, la Commune de Paris, les Beatles ou la transition écologique n'auront plus de secrets pour vous.`\n\n\n\n\n  // COMMENT THIS PARAGRAPH WHEN USING GATSBY BUILD \n  export const Head = ({data}) => {\n    return (\n      <Seo title={title} description={description} image={data.ogImage.gatsbyImageData.images.fallback.src} />   \n    );\n   }\n\n\n\n\n\nconst withLocation = ComponentToWrap => props => (\n  <Location>\n      {({ location, navigate }) => (\n          <ComponentToWrap\n              {...props}\n              location={location}\n              navigate={navigate}\n              search={location.search ? queryString.parse(location.search) : {}}\n          />\n      )}\n  </Location>\n)\n\n\nconsole.log(process.env)\n\nconst CustomQueryStringComponent = ({ search, data}) => {\n  return (<IndexPage search={search} data={data} />)\n}\nCustomQueryStringComponent.propTypes = {\n  search: PropTypes.object,\n}\n\nconst IndexPage = ({ data, search }) => {\n\n\n\n\n\n  if (DEBUG){\n\n    if (DEBUG == 1)\n      return (<Box>DEBUG MODE</Box>)\n\n\n  }\n \n\n\n\n\n\n    const InsideWrapper = ({data}) =>{\n\n       \n\n      const { authState, authActions } = useContext(AuthContext)\n      const [cognitoId, setCognitoId] = useState(null)\n      const [isMounted, setIsMounted] = useState(false)\n      const [hasNotifications, setHasNotifications] = useState(false)\n      const [ssrTest, setSsrTest] = useState(false)\n\n      useEffect(() => {\n\n    \n\n        if (!isMounted)\n          setIsMounted(true)\n    \n    \n        if (authState?.user && authState.user.cognitoId != cognitoId) {\n    \n    \n    \n          \n    \n    \n          const cognitoId = authState.user.cognitoId\n          fetchTransactions(cognitoId, authActions.setTransactions, authActions.setCards, authActions.set_HasNeverBought, authActions.appendTransactions, authActions.setCredits, authActions.setReplays, authActions.appendReplays)\n          fetchCredits(cognitoId, authActions.setCredits)\n          fetchPromoCodes(authActions.setCodePromos)\n          setCognitoId(authState.user.cognitoId)\n        }\n        if (authState?.user?.id && !hasNotifications) {\n    \n          const clientId = authState.user.id\n          fetchNotifications(clientId, authActions.setNotifications)\n          setHasNotifications(true)\n    \n        }\n    \n    \n      }, [authState])\n    \n    \n      \n    \n      useEffect(() => {\n    \n        let timer\n    \n        if (search.position == 'newsletter' )\n        {\n          const timer = setTimeout(() => {\n            console.log('@REF')\n            console.log(search)\n            window.scrollTo(0,2300)\n           }, 50);\n         }\n    \n         \n         return () => clearTimeout(timer);\n        }\n    \n        \n    \n       ,[]);\n\n       \n\n      const newsletterRef = useRef(null)\n      const isSSR = typeof window === \"undefined\"\n\n\n      // if (!isMounted)\n      //   return null\n\n\n      return(<Layout data={data} ssrTest={ssrTest} setSsrTest={setSsrTest}>\n        \n        <Box >\n          \n          <MainImage data={data} />\n        </Box>\n        <Box  sx={sxStyle} marginTop=\"60px\" >\n          <MainFilter data={data} isMounted={isMounted} ssrTest={ssrTest} />\n         \n          <ConferencesSection data={data} isMounted={isMounted} />\n        </Box>\n        <Box sx={sxStyle}>\n          {/* <div\n            data-sal=\"slide-up\"\n            data-sal-delay=\"100\"\n            data-sal-easing=\"ease\"\n          >  */}\n            <CyclesSection data={data} />\n            <ReplaySection data={data} />\n          {/* </div> */}\n          <SecondPhoto newsletterRef={newsletterRef} data={data}/>\n        \n\n         \n          \n  \n          \n        </Box>\n  \n  \n        <Box sx={sxStyle} marginTop=\"80px\" >\n          {!isSSR && <Suspense fallback={<Box color=\"white\">Loading...</Box>}>\n            \n            <Calendar data={data} />\n          </Suspense>}\n  \n        </Box>\n      </Layout>)\n    }\n\n\n  return (\n   \n      <ThemeProvider theme={FrontOfficeTheme}>\n        <InsideWrapper data={data}/>\n      </ThemeProvider>\n   \n  );\n\n\n}\n\nexport default withLocation(CustomQueryStringComponent)\n\n\n\n\n\n\n\nexport const query = graphql`\n query {\n\n  phoneImage: imageSharp(original: {src: {regex: \"/phone/\"}}) {\n    gatsbyImageData(\n      height: 1000\n      quality: 95\n      placeholder: BLURRED\n      transformOptions: {cropFocus: ATTENTION}\n      )\n  }\n\n  ogImage: imageSharp(original: {src: {regex: \"/main_og_image/\"}}) {\n    gatsbyImageData(\n      width: 1000\n      height: 630\n      quality: 80\n      placeholder: BLURRED\n      transformOptions: {cropFocus: ATTENTION}\n      )\n  }\n\n  mainImage: imageSharp(original: {src: {regex: \"/fo_wall/\"}}) {\n    gatsbyImageData\n  }  \n\n  pageImages:  allImageSharp(\n    filter: {original: {src: {regex: \"/photo/\"}}}\n  ) {\n    edges {\n      node {\n        gatsbyImageData(\n          width: 800\n          quality: 90\n          placeholder: BLURRED\n          transformOptions: {cropFocus: ATTENTION}\n          )\n      }\n    }\n  }\n\n  replays: allDbEvent(filter: {replayStatus: {eq: \"AVAILABLE\"}}) {\n    edges {\n      node {\n        categories\n        date\n        replayStatus\n        replayCategory\n        title1\n        title2\n        imageKey\n        imageETag500\n        fields {\n          slug\n        }\n        children {\n          ... on DBFormateur {\n            nom\n            prenom\n            imageId\n            children {\n              ... on ImageSharp {\n                id\n                gatsbyImageData\n                original {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n\n\n\n  portraits : allImageSharp(filter: {original: {src: {regex: \"/portrait/\"}}}) {\n    edges {\n      node {\n        \n        original {\n          src\n        }\n        \n      }\n    }\n  }\n  site {\n    buildTime\n  }\n\n\n  site {\n      siteMetadata {\n        title\n        description\n        author\n        image\n        url\n      }\n    }\n  \n\n\n\n\n\n  markdowns: allMarkdownRemark (filter: {frontmatter: {color: {ne: \"\"}}}){\n    nodes {\n      html\n      frontmatter {\n        title\n        key\n        type\n        position\n        color\n        slug\n      }\n    }\n  }\n\n  cycles: allDbCycle (filter: {status: {eq: \"PUBLISHED\"}}) {\n    edges {\n      node {\n        title\n        status\n        imageKey\n        imageETag500\n        children {\n          ... on ImageSharp {\n            original{\n              src\n            }\n\n        \n      \n          }\n    \n        }\n        formateur: children {\n          ... on DBFormateur {\n            nom\n            prenom\n            ... on DBFormateur {\n              id\n            nom\n          prenom\n          sanboxLemonwayId\n          hashList\n          intro\n          fields{\n              formateurId\n              slug\n            }\n          children {\n              ...on ImageSharp {\n              gatsbyImageData\n                original{\n  \n              src}\n              }\n            }\n          }\n\n        \n      \n          }\n    \n        }\n        events: children {\n\n          ...on DBEvent {\n          title1\n          title2\n          date\n          }\n        }\n        fields{\n          cycleId\n          slug\n        }\n      }\n    }\n  }\n\n\n\n\n\n  events: allDbEvent\n  {\n      edges {\n        node {\n                  title1\n                  title2\n                  format\n                  outil\n                  imageKey\n                  imageETag500\n                  categoriesCode\n                  formateurId\n                  nbMax\n                  nbReserved\n                  imageETag300\n                  attendingNb\n                  date\n                  state\n                  format\n                  children {\n                    ... on DBFormateur {\n                      nom\n                      prenom\n                      state\n                      imageId\n                \n                    }\n                    ... on ImageSharp {\n                      original{\n                        src\n                      }\n                \n                \n                    }\n              \n                  }\n                  fields\n                    {\n                      eventId\n                      slug\n                    }\n\t\t\t\t\t\t}\n      \t\t}\n  }\n }\n`\n\n\n\n\n"],"names":["Calendar","lazy","Head","data","___EmotionJSX","Seo","title","description","image","ogImage","gatsbyImageData","images","fallback","src","console","log","process","ComponentToWrap","IndexPage","search","DEBUG","Box","ThemeProvider","theme","FrontOfficeTheme","useContext","AuthContext","authState","authActions","useState","cognitoId","setCognitoId","isMounted","setIsMounted","hasNotifications","setHasNotifications","ssrTest","setSsrTest","useEffect","user","fetchTransactions","setTransactions","setCards","set_HasNeverBought","appendTransactions","setCredits","setReplays","appendReplays","fetchCredits","fetchPromoCodes","setCodePromos","id","clientId","fetchNotifications","setNotifications","position","setTimeout","window","scrollTo","clearTimeout","timer","newsletterRef","useRef","isSSR","Layout","MainImage","sx","sxStyle","marginTop","MainFilter","ConferencesSection","CyclesSection","ReplaySection","SecondPhoto","Suspense","color","props","Location","location","navigate","queryString"],"sourceRoot":""}